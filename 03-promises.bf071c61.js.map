{"version":3,"sources":["js/03-promises.js"],"names":["createPromise","position","delay","Math","random","promise","Promise","resolve","reject","setTimeout","then","value","console","log","catch","error","finally"],"mappings":";AAAA,SAASA,EAAcC,EAAUC,GACTC,KAAKC,SAQ7B,MAAMC,EAAU,IAAIC,QAAQ,CAACC,EAASC,KACpCC,WAAW,KACTF,EAAQ,IACP,OAGLF,EACGK,KAAKC,IACJC,QAAQC,IAAIF,GACG,EAARA,IAERD,KAAKC,IACJC,QAAQC,IAAIF,GACG,EAARA,IAERD,KAAKC,IACJC,QAAQC,IAAIF,KAEbG,MAAMC,IACLH,QAAQC,IAAIE,KAEbC,QAAQ,KACPJ,QAAQC,IAAI","file":"03-promises.bf071c61.js","sourceRoot":"../src","sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\nconst promise = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    resolve(5);\n  }, 2000);\n});\n\npromise\n  .then(value => {\n    console.log(value); // 5\n    return value * 2;\n  })\n  .then(value => {\n    console.log(value); // 10\n    return value * 3;\n  })\n  .then(value => {\n    console.log(value); // 30\n  })\n  .catch(error => {\n    console.log(error);\n  })\n  .finally(() => {\n    console.log('Final task');\n  });\n"]}